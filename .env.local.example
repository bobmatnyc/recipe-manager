# =============================================================================
# LOCAL DEVELOPMENT ENVIRONMENT
# =============================================================================
# This file contains example values for local development
# Copy to .env.local and update with your actual values

# Application Configuration
NEXT_PUBLIC_APP_URL=http://localhost:3002
NODE_ENV=development

# Database Configuration (Required)
# Replace with your actual PostgreSQL connection string
DATABASE_URL=postgresql://user:password@host:port/database?sslmode=require

# AI Features (Required for recipe generation)
# Get your API key from https://openrouter.ai/
OPENROUTER_API_KEY=sk-or-v1-your-actual-api-key-here

# Brave Search API for web recipe discovery
# Get your API key from https://brave.com/search/api/
BRAVE_SEARCH_API_KEY=your_brave_search_api_key_here

# Hugging Face API for embedding generation (vector search)
# Get your API key from https://huggingface.co/settings/tokens (free tier available)
# Used for generating recipe embeddings with sentence-transformers/all-MiniLM-L6-v2 model
HUGGINGFACE_API_KEY=your_huggingface_api_key_here

# SerpAPI for web recipe crawling
# Get your API key from https://serpapi.com/ (free tier available with 100 searches/month)
# Used for discovering recipes from the web through Google Search
SERPAPI_KEY=your_serpapi_key_here

# Perplexity API for weekly recipe discovery
# Get your API key from https://www.perplexity.ai/settings/api
# Used for discovering newly published recipes week by week
PERPLEXITY_API_KEY=your_perplexity_api_key_here

# Firecrawl API for chef recipe scraping
# Get your API key from https://www.firecrawl.dev/
# Used for scraping and crawling recipe websites for chef profiles
FIRECRAWL_API_KEY=fc-your_firecrawl_api_key_here

# TheMealDB API for recipe import
# Use "1" for free test key (development)
# Premium key: $2/month on Patreon (https://www.patreon.com/thedatadb)
THEMEALDB_API_KEY=1

# Tasty API (RapidAPI) for BuzzFeed recipe import
# Get your API key from https://rapidapi.com/apidojo/api/tasty
# Free tier: 500 requests/month, Pro tier: $9.99/month for 10,000 requests/month
# NOTE: Host was corrected on 2025-10-19 - use tasty-api1.p.rapidapi.com (not tasty.p.rapidapi.com)
RAPIDAPI_KEY=your_rapidapi_key_here
RAPIDAPI_HOST=tasty-api1.p.rapidapi.com

# Authentication (Optional - can be left empty to disable auth)
# Get these from https://dashboard.clerk.com

# OPTION 1: Environment-specific keys (Recommended)
# Development keys (for localhost:3002)
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY_DEV=pk_test_your-actual-test-publishable-key
CLERK_SECRET_KEY_DEV=sk_test_your-actual-test-secret-key

# Production keys (for recipes.help) - only set these in production
# NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY_PROD=pk_live_Y2xlcmsucmVjaXBlcy5oZWxwJA
# CLERK_SECRET_KEY_PROD=sk_live_kVahgqoC5y0pGHgfTjyxJoffbzYCh4OGI1AfwpXImg

# OPTION 2: Single key pair (will auto-select based on environment)
# For development, use test keys:
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_your-actual-test-publishable-key
CLERK_SECRET_KEY=sk_test_your-actual-test-secret-key

# Enable authentication testing in development
ENABLE_DEV_AUTH=true

# Clerk redirect URLs for development
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/

# =============================================================================
# E2E TESTING CREDENTIALS (Required for Playwright tests)
# =============================================================================
# Create dedicated test users in Clerk Dashboard and add their credentials here
# See: docs/testing/E2E_TEST_SETUP.md for detailed setup instructions

# Primary test user (standard user with regular permissions)
TEST_USER_EMAIL=test-user-1@recipe-manager.test
TEST_USER_PASSWORD=your_secure_test_password_here

# Additional test users (optional - for parallel testing or specific scenarios)
TEST_USER_2_EMAIL=test-user-2@recipe-manager.test
TEST_USER_2_PASSWORD=your_secure_test_password_here

# Admin test user (optional - for admin feature testing)
TEST_ADMIN_EMAIL=test-admin@recipe-manager.test
TEST_ADMIN_PASSWORD=your_secure_test_password_here

# Note: Test user emails should use @recipe-manager.test domain
# Note: Passwords should be strong (min 8 chars, mix of letters/numbers/symbols)
# Note: Never commit actual credentials - .env.local is gitignored

# =============================================================================
# QUICK START INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env.local
# 2. Update DATABASE_URL with your PostgreSQL connection
# 3. Add your OPENROUTER_API_KEY for AI features
# 4. Optionally add Clerk keys for authentication
# 5. Create test users for E2E testing (see docs/testing/E2E_TEST_SETUP.md)
# 6. Run: npm run dev